# Generated by Django 5.2.7 on 2025-10-22 12:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0005_keypersonnel"),
        ("flight_operations", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="mission",
            name="risk_assessment_completed",
        ),
        migrations.RemoveField(
            model_name="mission",
            name="risk_level",
        ),
        migrations.AddField(
            model_name="mission",
            name="jsa_required",
            field=models.BooleanField(
                default=True,
                help_text="Mission requires Job Safety Assessment",
                verbose_name="JSA Required",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="overall_risk_level",
            field=models.CharField(
                blank=True,
                choices=[
                    ("low", "Low Risk"),
                    ("medium", "Medium Risk"),
                    ("high", "High Risk"),
                ],
                help_text="Overall assessed risk level from risk register",
                max_length=10,
                verbose_name="Overall Risk Level",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="risk_accepted_by_ceo",
            field=models.BooleanField(
                default=False,
                help_text="High risk operations have been accepted by CEO",
                verbose_name="Risk Accepted by CEO",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="risk_accepted_by_crp",
            field=models.BooleanField(
                default=False,
                help_text="Medium/Low risk operations accepted by Chief Remote Pilot",
                verbose_name="Risk Accepted by Chief Remote Pilot",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="risk_assessment_required",
            field=models.BooleanField(
                default=True,
                help_text="Mission requires formal risk assessment",
                verbose_name="Risk Assessment Required",
            ),
        ),
        migrations.CreateModel(
            name="JobSafetyAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jsa_id",
                    models.CharField(
                        help_text="Unique Job Safety Assessment identifier",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format: JSA-YYYY-XXXXXX",
                                regex="^JSA-\\d{4}-\\d{6}$",
                            )
                        ],
                        verbose_name="JSA ID",
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            (
                                "soc",
                                "Standard Operating Conditions (SOC) - RPA not heavier than 2kg, no official authorisation required",
                            ),
                            ("reoc", "Remote Operator Certificate (ReOC) operations"),
                            (
                                "casa_approval",
                                "Operations requiring specific CASA approval",
                            ),
                        ],
                        help_text="Type of RPA operation under CASA regulations",
                        max_length=20,
                        verbose_name="Operation Type",
                    ),
                ),
                (
                    "operating_area_map",
                    models.TextField(
                        help_text="Description of operating area showing launch and landing locations and any relevant hazards",
                        verbose_name="Map of Operating Area",
                    ),
                ),
                (
                    "airspace_class",
                    models.CharField(
                        choices=[
                            ("G", "Class G - Uncontrolled Airspace"),
                            ("E", "Class E - Controlled Airspace"),
                            ("D", "Class D - Controlled Airspace"),
                            ("C", "Class C - Controlled Airspace"),
                            ("PRD", "Prohibited, Restricted, or Danger Area"),
                        ],
                        help_text="Airspace classification for operating area",
                        max_length=10,
                        verbose_name="Airspace Class(es) and Height(s)",
                    ),
                ),
                (
                    "maximum_operating_height_agl",
                    models.PositiveIntegerField(
                        help_text="Maximum operating height above ground level",
                        validators=[django.core.validators.MaxValueValidator(400)],
                        verbose_name="Maximum Operating Height (ft AGL)",
                    ),
                ),
                (
                    "maximum_operating_altitude_amsl",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum operating altitude above mean sea level",
                        null=True,
                        verbose_name="Maximum Operating Altitude (ft AMSL)",
                    ),
                ),
                (
                    "nearby_aerodromes",
                    models.TextField(
                        blank=True,
                        help_text="Include location, distance, type of nearby aerodromes",
                        verbose_name="Nearby Aerodromes",
                    ),
                ),
                (
                    "aeronautical_radio_frequencies",
                    models.TextField(
                        blank=True,
                        help_text="Relevant radio frequencies for area coordination",
                        verbose_name="Aeronautical Radio Frequencies",
                    ),
                ),
                (
                    "flight_types",
                    models.JSONField(
                        default=list,
                        help_text="Types of flights to be conducted (VLOS, EVLOS, BVLOS, DAY, NIGHT)",
                        verbose_name="Flight Types",
                    ),
                ),
                (
                    "airspace_hazards",
                    models.TextField(
                        blank=True,
                        help_text="Airspace-related hazards and mitigation strategies",
                        verbose_name="Airspace Hazards and Mitigations",
                    ),
                ),
                (
                    "ground_hazards",
                    models.TextField(
                        blank=True,
                        help_text="Ground hazards and mitigations (people, obstacles, interference, etc.)",
                        verbose_name="Ground Hazards and Mitigations",
                    ),
                ),
                (
                    "sop_adequate",
                    models.BooleanField(
                        default=False,
                        help_text="Standard Operating Procedures adequately address all identified hazards",
                        verbose_name="Does SOP adequately mitigate all hazards?",
                    ),
                ),
                (
                    "unmitigated_hazards",
                    models.TextField(
                        blank=True,
                        help_text="Detail unmitigated hazards if SOP is not adequate",
                        verbose_name="Unmitigated Hazards Details",
                    ),
                ),
                (
                    "preliminary_assessment_accurate",
                    models.BooleanField(
                        default=False,
                        help_text="Preliminary assessment or JSA is accurate and complete",
                        verbose_name="Preliminary Assessment/JSA Accurate",
                    ),
                ),
                (
                    "assessment_changes",
                    models.TextField(
                        blank=True,
                        help_text="Record changes here if preliminary assessment needs updates",
                        verbose_name="Assessment Changes",
                    ),
                ),
                (
                    "additional_operating_restrictions",
                    models.TextField(
                        blank=True,
                        help_text="Additional restrictions or limitations for this operation",
                        verbose_name="Additional Operating Restrictions/Limitations",
                    ),
                ),
                (
                    "official_authorization",
                    models.TextField(
                        blank=True,
                        help_text="Identification of official authorisation obtained (if applicable)",
                        verbose_name="Official Authorisation Obtained",
                    ),
                ),
                (
                    "flight_authorized",
                    models.BooleanField(
                        default=False,
                        help_text="Flight has been authorized to proceed",
                        verbose_name="Flight Authorised?",
                    ),
                ),
                (
                    "authorized_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when operations were approved",
                        null=True,
                        verbose_name="Date(s) Approved for Operations",
                    ),
                ),
                (
                    "approved_aircraft_types",
                    models.TextField(
                        blank=True,
                        help_text="Specific aircraft types approved for these operations",
                        verbose_name="RPA Types/Models Approved for Operations",
                    ),
                ),
                (
                    "crp_approval_signature",
                    models.CharField(
                        blank=True,
                        help_text="Chief Remote Pilot or ARN signature",
                        max_length=100,
                        verbose_name="CRP/ARN Signature",
                    ),
                ),
                (
                    "crp_approval_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of CRP or ARN approval",
                        null=True,
                        verbose_name="CRP/ARN Approval Date",
                    ),
                ),
                (
                    "rp_approval_signature",
                    models.CharField(
                        blank=True,
                        help_text="Remote Pilot or ARN signature",
                        max_length=100,
                        verbose_name="RP/ARN Signature",
                    ),
                ),
                (
                    "rp_approval_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of RP or ARN approval",
                        null=True,
                        verbose_name="RP/ARN Approval Date",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "mission",
                    models.OneToOneField(
                        help_text="Associated mission",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flight_operations.mission",
                        verbose_name="Mission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Safety Assessment",
                "verbose_name_plural": "Job Safety Assessments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RiskRegister",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        help_text="Unique risk reference number",
                        max_length=20,
                        unique=True,
                        verbose_name="Reference Number",
                    ),
                ),
                (
                    "date_entered",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Date risk was entered in register",
                        verbose_name="Date Entered in Register",
                    ),
                ),
                (
                    "hazard",
                    models.TextField(
                        help_text="Description of the hazard", verbose_name="Hazard"
                    ),
                ),
                (
                    "risk_description",
                    models.TextField(
                        help_text="Detailed description of the risk",
                        verbose_name="Risk Description",
                    ),
                ),
                (
                    "existing_controls",
                    models.TextField(
                        help_text="Current controls in place to manage risk",
                        verbose_name="Existing Controls",
                    ),
                ),
                (
                    "initial_likelihood",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (
                                1,
                                "Extremely Improbable - Almost inconceivable that this event will occur",
                            ),
                            (
                                2,
                                "Improbable - Very unlikely to occur (not known to have occurred)",
                            ),
                            (
                                3,
                                "Remote - Unlikely to occur, but possible (has occurred rarely)",
                            ),
                            (
                                4,
                                "Occasional - Likely to occur sometimes (has occurred infrequently)",
                            ),
                            (
                                5,
                                "Frequent - Likely to occur many times (has occurred frequently)",
                            ),
                        ],
                        help_text="Initial likelihood rating (1-5)",
                        verbose_name="Initial Likelihood",
                    ),
                ),
                (
                    "initial_consequence",
                    models.CharField(
                        choices=[
                            (
                                "E",
                                "Negligible - Less than $2,000 impact, Few consequences, managed through normal procedures",
                            ),
                            (
                                "D",
                                "Minor - $2,000-$10,000 impact, Minor injury, Operating limitations required, Use of emergency procedures",
                            ),
                            (
                                "C",
                                "Moderate - $10,000-$50,000 impact, Serious incident, Injury to persons, Significant reduction in safety margins",
                            ),
                            (
                                "B",
                                "Hazardous - $50,000-$100,000 impact, Major incident, Serious injury, Major equipment damage, Major impact to organisation ability",
                            ),
                            (
                                "A",
                                "Catastrophic - More than $100,000 impact, Fatality, Equipment destroyed, Threatens the ongoing existence of the organisation",
                            ),
                        ],
                        help_text="Initial consequence rating (A-E)",
                        max_length=1,
                        verbose_name="Initial Consequence",
                    ),
                ),
                (
                    "initial_risk_rating",
                    models.CharField(
                        blank=True,
                        help_text="Calculated initial risk rating (e.g., 3C)",
                        max_length=3,
                        verbose_name="Initial Risk Rating",
                    ),
                ),
                (
                    "additional_controls",
                    models.TextField(
                        blank=True,
                        help_text="Additional controls to be implemented",
                        verbose_name="Additional Controls",
                    ),
                ),
                (
                    "residual_likelihood",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (
                                1,
                                "Extremely Improbable - Almost inconceivable that this event will occur",
                            ),
                            (
                                2,
                                "Improbable - Very unlikely to occur (not known to have occurred)",
                            ),
                            (
                                3,
                                "Remote - Unlikely to occur, but possible (has occurred rarely)",
                            ),
                            (
                                4,
                                "Occasional - Likely to occur sometimes (has occurred infrequently)",
                            ),
                            (
                                5,
                                "Frequent - Likely to occur many times (has occurred frequently)",
                            ),
                        ],
                        help_text="Residual likelihood rating after additional controls",
                        verbose_name="Residual Likelihood",
                    ),
                ),
                (
                    "residual_consequence",
                    models.CharField(
                        choices=[
                            (
                                "E",
                                "Negligible - Less than $2,000 impact, Few consequences, managed through normal procedures",
                            ),
                            (
                                "D",
                                "Minor - $2,000-$10,000 impact, Minor injury, Operating limitations required, Use of emergency procedures",
                            ),
                            (
                                "C",
                                "Moderate - $10,000-$50,000 impact, Serious incident, Injury to persons, Significant reduction in safety margins",
                            ),
                            (
                                "B",
                                "Hazardous - $50,000-$100,000 impact, Major incident, Serious injury, Major equipment damage, Major impact to organisation ability",
                            ),
                            (
                                "A",
                                "Catastrophic - More than $100,000 impact, Fatality, Equipment destroyed, Threatens the ongoing existence of the organisation",
                            ),
                        ],
                        help_text="Residual consequence rating after additional controls",
                        max_length=1,
                        verbose_name="Residual Consequence",
                    ),
                ),
                (
                    "residual_risk_rating",
                    models.CharField(
                        blank=True,
                        help_text="Calculated residual risk rating",
                        max_length=3,
                        verbose_name="Residual Risk Rating",
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        help_text="Overall risk level classification",
                        max_length=10,
                        verbose_name="Risk Level",
                    ),
                ),
                (
                    "acceptance_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ceo", "CEO"),
                            ("chief_remote_pilot", "Chief Remote Pilot"),
                        ],
                        help_text="Required approval level for this risk",
                        max_length=20,
                        verbose_name="Acceptance Level",
                    ),
                ),
                (
                    "review_due_date",
                    models.DateField(
                        help_text="Date when risk should be reviewed",
                        verbose_name="Review Due Date",
                    ),
                ),
                (
                    "actions_required",
                    models.TextField(
                        blank=True,
                        help_text="Specific actions required based on risk level",
                        verbose_name="Actions Required",
                    ),
                ),
                (
                    "risk_accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Risk has been formally accepted",
                        verbose_name="Risk Accepted",
                    ),
                ),
                (
                    "accepted_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date/time when risk was accepted",
                        null=True,
                        verbose_name="Accepted Date",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "accepted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Person who accepted the risk",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accepted_risks",
                        to="accounts.staffprofile",
                        verbose_name="Accepted By",
                    ),
                ),
                (
                    "mission",
                    models.ForeignKey(
                        help_text="Associated mission",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_registers",
                        to="flight_operations.mission",
                        verbose_name="Mission",
                    ),
                ),
                (
                    "risk_owner",
                    models.ForeignKey(
                        help_text="Person responsible for managing this risk",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.staffprofile",
                        verbose_name="Risk Owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Risk Register",
                "verbose_name_plural": "Risk Registers",
                "ordering": ["-date_entered"],
            },
        ),
    ]

# Generated by Django 5.2.7 on 2025-10-22 10:44

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0005_keypersonnel"),
        ("aircraft", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MaintenanceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Descriptive name for maintenance type",
                        max_length=100,
                        verbose_name="Maintenance Type Name",
                    ),
                ),
                (
                    "type_category",
                    models.CharField(
                        choices=[
                            ("daily_inspection", "Daily Inspection"),
                            ("pre_flight", "Pre-Flight Check"),
                            ("post_flight", "Post-Flight Check"),
                            ("periodic", "Periodic Maintenance"),
                            ("100_hour", "100 Hour Inspection"),
                            ("annual", "Annual Inspection"),
                            ("repair", "Repair Work"),
                            ("modification", "Modification"),
                            ("overhaul", "Overhaul"),
                        ],
                        help_text="CASA maintenance category",
                        max_length=20,
                        verbose_name="Type Category",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low Priority"),
                            ("medium", "Medium Priority"),
                            ("high", "High Priority"),
                            ("critical", "Critical - Grounding"),
                        ],
                        default="medium",
                        help_text="Maintenance priority level",
                        max_length=10,
                        verbose_name="Priority Level",
                    ),
                ),
                (
                    "frequency_hours",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maintenance interval in flight hours",
                        null=True,
                        verbose_name="Frequency (Flight Hours)",
                    ),
                ),
                (
                    "frequency_days",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maintenance interval in calendar days",
                        null=True,
                        verbose_name="Frequency (Calendar Days)",
                    ),
                ),
                (
                    "frequency_cycles",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maintenance interval in flight cycles",
                        null=True,
                        verbose_name="Frequency (Flight Cycles)",
                    ),
                ),
                (
                    "casa_required",
                    models.BooleanField(
                        default=True,
                        help_text="Required by CASA regulations",
                        verbose_name="CASA Required",
                    ),
                ),
                (
                    "licensed_engineer_required",
                    models.BooleanField(
                        default=False,
                        help_text="Requires licensed aircraft maintenance engineer",
                        verbose_name="Licensed Engineer Required",
                    ),
                ),
                (
                    "casa_form_required",
                    models.CharField(
                        blank=True,
                        help_text="Required CASA maintenance form (e.g., Form 337)",
                        max_length=20,
                        verbose_name="CASA Form Required",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of maintenance procedures",
                        verbose_name="Description",
                    ),
                ),
                (
                    "reference_manual",
                    models.CharField(
                        blank=True,
                        help_text="Aircraft maintenance manual reference",
                        max_length=100,
                        verbose_name="Reference Manual",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Maintenance Type",
                "verbose_name_plural": "Maintenance Types",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="MaintenanceRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "maintenance_id",
                    models.CharField(
                        help_text="Unique maintenance record identifier",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format: MNT-YYYY-XXXXXX",
                                regex="^MNT-\\d{4}-\\d{6}$",
                            )
                        ],
                        verbose_name="Maintenance ID",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateField(
                        help_text="Date maintenance was scheduled",
                        verbose_name="Scheduled Date",
                    ),
                ),
                (
                    "started_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When maintenance work began",
                        null=True,
                        verbose_name="Started Date/Time",
                    ),
                ),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When maintenance work was completed",
                        null=True,
                        verbose_name="Completed Date/Time",
                    ),
                ),
                (
                    "pre_maintenance_hours",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Aircraft hours before maintenance",
                        max_digits=10,
                        verbose_name="Pre-Maintenance Hours",
                    ),
                ),
                (
                    "post_maintenance_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Aircraft hours after maintenance",
                        max_digits=10,
                        null=True,
                        verbose_name="Post-Maintenance Hours",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("deferred", "Deferred"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        help_text="Current maintenance status",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "completion_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("satisfactory", "Satisfactory"),
                            ("unsatisfactory", "Unsatisfactory"),
                            ("partial", "Partially Complete"),
                            ("requires_followup", "Requires Follow-up"),
                        ],
                        help_text="Result of maintenance work",
                        max_length=20,
                        verbose_name="Completion Status",
                    ),
                ),
                (
                    "work_performed",
                    models.TextField(
                        help_text="Detailed description of work performed",
                        verbose_name="Work Performed",
                    ),
                ),
                (
                    "parts_used",
                    models.TextField(
                        blank=True,
                        help_text="List of parts and materials used",
                        verbose_name="Parts Used",
                    ),
                ),
                (
                    "defects_found",
                    models.TextField(
                        blank=True,
                        help_text="Any defects discovered during maintenance",
                        verbose_name="Defects Found",
                    ),
                ),
                (
                    "corrective_actions",
                    models.TextField(
                        blank=True,
                        help_text="Actions taken to correct defects",
                        verbose_name="Corrective Actions",
                    ),
                ),
                (
                    "casa_form_completed",
                    models.BooleanField(
                        default=False,
                        help_text="Required CASA documentation completed",
                        verbose_name="CASA Form Completed",
                    ),
                ),
                (
                    "return_to_service_authorization",
                    models.CharField(
                        blank=True,
                        help_text="Authorization for return to service",
                        max_length=100,
                        verbose_name="Return to Service Authorization",
                    ),
                ),
                (
                    "labor_hours",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total labor hours for maintenance",
                        max_digits=6,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.1"))
                        ],
                        verbose_name="Labor Hours",
                    ),
                ),
                (
                    "parts_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total cost of parts and materials",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Parts Cost",
                    ),
                ),
                (
                    "next_maintenance_due",
                    models.DateField(
                        blank=True,
                        help_text="Date when next maintenance is due",
                        null=True,
                        verbose_name="Next Maintenance Due",
                    ),
                ),
                (
                    "followup_required",
                    models.BooleanField(
                        default=False,
                        help_text="Requires follow-up maintenance",
                        verbose_name="Follow-up Required",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "aircraft",
                    models.ForeignKey(
                        help_text="Aircraft being maintained",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="aircraft.aircraft",
                        verbose_name="Aircraft",
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        help_text="Maintenance technician who performed work",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="performed_maintenance",
                        to="accounts.staffprofile",
                        verbose_name="Performed By",
                    ),
                ),
                (
                    "supervised_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Licensed engineer supervising work",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="supervised_maintenance",
                        to="accounts.staffprofile",
                        verbose_name="Supervised By",
                    ),
                ),
                (
                    "maintenance_type",
                    models.ForeignKey(
                        help_text="Type of maintenance being performed",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="maintenance.maintenancetype",
                        verbose_name="Maintenance Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance Record",
                "verbose_name_plural": "Maintenance Records",
                "ordering": ["-scheduled_date", "-created_at"],
            },
        ),
    ]

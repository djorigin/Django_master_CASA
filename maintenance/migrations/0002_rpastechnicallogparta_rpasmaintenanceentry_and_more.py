# Generated by Django 5.2.7 on 2025-10-22 12:38

from decimal import Decimal

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0005_keypersonnel"),
        ("aircraft", "0001_initial"),
        ("flight_operations", "0002_remove_mission_risk_assessment_completed_and_more"),
        ("maintenance", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RPASTechnicalLogPartA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rpa_type_model",
                    models.CharField(
                        blank=True,
                        help_text="Automatically populated from aircraft data",
                        max_length=100,
                        verbose_name="RPA Type & Model",
                    ),
                ),
                (
                    "max_gross_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum gross weight from aircraft specifications",
                        max_digits=6,
                        null=True,
                        verbose_name="Max Gross Weight (kg)",
                    ),
                ),
                (
                    "date_of_registration_expiry",
                    models.DateField(
                        blank=True,
                        help_text="Aircraft registration expiry date",
                        null=True,
                        verbose_name="Date of Registration Expiry",
                    ),
                ),
                (
                    "maintenance_schedule_reference",
                    models.TextField(
                        blank=True,
                        help_text="Reference to manufacturer's maintenance system or Operations Manual",
                        verbose_name="Maintenance Schedule",
                    ),
                ),
                (
                    "part_101_moc_issued_by",
                    models.CharField(
                        blank=True,
                        help_text="Authority certifying MOC compliance",
                        max_length=100,
                        verbose_name="Part 101 MOC Issued By",
                    ),
                ),
                (
                    "part_101_moc_issued_on",
                    models.DateField(
                        blank=True,
                        help_text="Date of MOC certification",
                        null=True,
                        verbose_name="Part 101 MOC Issued On",
                    ),
                ),
                (
                    "part_101_moc_signed_by",
                    models.CharField(
                        blank=True,
                        help_text="Name and ARNC of certifying authority",
                        max_length=100,
                        verbose_name="Part 101 MOC Signed By",
                    ),
                ),
                (
                    "major_defects_notes",
                    models.TextField(
                        blank=True,
                        help_text="These defects preclude further flight until rectified",
                        verbose_name="Major Defects",
                    ),
                ),
                (
                    "minor_defects_notes",
                    models.TextField(
                        blank=True,
                        help_text="These defects must be checked at each Daily Inspection until rectified",
                        verbose_name="Minor Defects",
                    ),
                ),
                (
                    "current_status",
                    models.CharField(
                        choices=[
                            ("serviceable", "Serviceable"),
                            ("unserviceable", "Unserviceable - Major Defects"),
                            ("conditional", "Conditional - Minor Defects Only"),
                        ],
                        default="serviceable",
                        max_length=20,
                        verbose_name="Current RPA Status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "aircraft",
                    models.ForeignKey(
                        help_text="RPA Aircraft - references existing aircraft data",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="aircraft.aircraft",
                        verbose_name="RPA",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Staff member who created this log entry",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.staffprofile",
                        verbose_name="Created By",
                    ),
                ),
            ],
            options={
                "verbose_name": "RPAS Technical Log - Part A",
                "verbose_name_plural": "RPAS Technical Log - Part A",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RPASMaintenanceEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_description",
                    models.CharField(
                        help_text="Maintenance item description for RPAS log",
                        max_length=200,
                        verbose_name="Item",
                    ),
                ),
                (
                    "due_date_tts",
                    models.DateField(
                        blank=True,
                        help_text="Due date or Time To Service",
                        null=True,
                        verbose_name="Due (date or TTS)",
                    ),
                ),
                (
                    "completed_date_arn",
                    models.DateField(
                        blank=True,
                        help_text="Completion date with technician details",
                        null=True,
                        verbose_name="Completed (date, name, ARN)",
                    ),
                ),
                (
                    "completed_by_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of person who completed maintenance",
                        max_length=100,
                        verbose_name="Completed By (Name)",
                    ),
                ),
                (
                    "completed_by_arn",
                    models.CharField(
                        blank=True,
                        help_text="ARN of person who completed maintenance",
                        max_length=20,
                        verbose_name="Completed By (ARN)",
                    ),
                ),
                (
                    "defect_category",
                    models.CharField(
                        choices=[
                            ("major", "Major Defect"),
                            ("minor", "Minor Defect"),
                            ("none", "No Defect"),
                        ],
                        default="none",
                        max_length=10,
                        verbose_name="Defect Category",
                    ),
                ),
                (
                    "rpas_specific_notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes specific to RPAS Technical Log requirements",
                        verbose_name="RPAS Specific Notes",
                    ),
                ),
                (
                    "maintenance_record",
                    models.ForeignKey(
                        help_text="Link to existing maintenance record",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rpas_entries",
                        to="maintenance.maintenancerecord",
                        verbose_name="Maintenance Record",
                    ),
                ),
                (
                    "technical_log_part_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maintenance_entries",
                        to="maintenance.rpastechnicallogparta",
                        verbose_name="RPAS Technical Log Part A",
                    ),
                ),
            ],
            options={
                "verbose_name": "RPAS Maintenance Entry",
                "verbose_name_plural": "RPAS Maintenance Entries",
                "unique_together": {("technical_log_part_a", "maintenance_record")},
            },
        ),
        migrations.CreateModel(
            name="RPASTechnicalLogPartB",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        help_text="Date of daily inspection", verbose_name="Date"
                    ),
                ),
                (
                    "daily_inspection_certification",
                    models.TextField(
                        blank=True,
                        help_text="Daily inspection certification details (IFP, MC, approved crew member, etc.)",
                        verbose_name="Daily Inspection Certification",
                    ),
                ),
                (
                    "signature_type",
                    models.CharField(
                        choices=[
                            ("ARN", "ARN - Aviation Reference Number"),
                            ("RPC", "RPC - Remote Pilot Certificate"),
                        ],
                        help_text="Type of signature/authorization",
                        max_length=3,
                        verbose_name="Signature Type",
                    ),
                ),
                (
                    "signature_identifier",
                    models.CharField(
                        help_text="ARN number or certificate identifier",
                        max_length=20,
                        verbose_name="Signature/ARN",
                    ),
                ),
                (
                    "flight_time",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Flight time for this date (hours)",
                        max_digits=5,
                        verbose_name="Flight Time",
                    ),
                ),
                (
                    "progressive_total_hrs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Running total of flight hours",
                        max_digits=8,
                        null=True,
                        verbose_name="Progressive Total (Hrs)",
                    ),
                ),
                (
                    "progressive_total_min",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Additional minutes for precision",
                        verbose_name="Progressive Total (Min)",
                    ),
                ),
                (
                    "daily_notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes for this daily inspection",
                        verbose_name="Daily Notes",
                    ),
                ),
                (
                    "inspection_satisfactory",
                    models.BooleanField(
                        default=True,
                        help_text="Daily inspection completed satisfactorily",
                        verbose_name="Inspection Satisfactory",
                    ),
                ),
                (
                    "defects_found",
                    models.TextField(
                        blank=True,
                        help_text="Any defects found during daily inspection",
                        verbose_name="Defects Found",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "inspector",
                    models.ForeignKey(
                        help_text="Person who performed daily inspection",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.staffprofile",
                        verbose_name="Inspector",
                    ),
                ),
                (
                    "linked_flight_logs",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Flight logs that contribute to this day's time",
                        to="flight_operations.flightlog",
                        verbose_name="Linked Flight Logs",
                    ),
                ),
                (
                    "technical_log_part_a",
                    models.ForeignKey(
                        help_text="Associated Part A record",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_logs",
                        to="maintenance.rpastechnicallogparta",
                        verbose_name="Technical Log Part A",
                    ),
                ),
            ],
            options={
                "verbose_name": "RPAS Technical Log - Part B",
                "verbose_name_plural": "RPAS Technical Log - Part B",
                "ordering": ["-date"],
                "unique_together": {("technical_log_part_a", "date")},
            },
        ),
    ]

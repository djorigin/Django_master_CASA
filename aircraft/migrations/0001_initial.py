# Generated by Django 5.2.7 on 2025-10-22 10:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0005_keypersonnel"),
    ]

    operations = [
        migrations.CreateModel(
            name="AircraftType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Manufacturer and model designation",
                        max_length=100,
                        verbose_name="Aircraft Type Name",
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        help_text="Aircraft manufacturer name",
                        max_length=100,
                        verbose_name="Manufacturer",
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        help_text="Aircraft model designation",
                        max_length=100,
                        verbose_name="Model",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("excluded", "Excluded Category (Part 101.073)"),
                            ("micro", "Micro RPA (≤250g)"),
                            ("small", "Small RPA (>250g ≤25kg)"),
                            ("medium", "Medium RPA (>25kg ≤150kg)"),
                            ("large", "Large RPA (>150kg)"),
                        ],
                        help_text="Part 101 operational category",
                        max_length=20,
                        verbose_name="CASA Category",
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("recreational", "Recreational"),
                            ("commercial", "Commercial"),
                            ("research", "Research & Development"),
                            ("emergency", "Emergency Services"),
                        ],
                        help_text="Authorized operation type",
                        max_length=20,
                        verbose_name="Operation Type",
                    ),
                ),
                (
                    "maximum_takeoff_weight",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Maximum Takeoff Weight in kilograms",
                        max_digits=8,
                        verbose_name="MTOW (kg)",
                    ),
                ),
                (
                    "maximum_operating_height",
                    models.PositiveIntegerField(
                        help_text="Maximum operating height above ground level",
                        verbose_name="Maximum Operating Height (ft AGL)",
                    ),
                ),
                (
                    "maximum_speed",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum operating speed in knots",
                        null=True,
                        verbose_name="Maximum Speed (knots)",
                    ),
                ),
                (
                    "casa_type_certificate",
                    models.CharField(
                        blank=True,
                        help_text="CASA type certificate number if applicable",
                        max_length=50,
                        verbose_name="CASA Type Certificate",
                    ),
                ),
                (
                    "excluded_category_compliant",
                    models.BooleanField(
                        default=False,
                        help_text="Meets Part 101.073 excluded category requirements",
                        verbose_name="Excluded Category Compliant",
                    ),
                ),
                (
                    "flight_manual_required",
                    models.BooleanField(
                        default=True,
                        help_text="Aircraft requires approved flight manual",
                        verbose_name="Flight Manual Required",
                    ),
                ),
                (
                    "maintenance_manual_required",
                    models.BooleanField(
                        default=True,
                        help_text="Aircraft requires maintenance manual",
                        verbose_name="Maintenance Manual Required",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Aircraft Type",
                "verbose_name_plural": "Aircraft Types",
                "ordering": ["manufacturer", "model"],
            },
        ),
        migrations.CreateModel(
            name="Aircraft",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "registration_mark",
                    models.CharField(
                        help_text="Aircraft registration identifier",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Registration mark must be 3-20 alphanumeric characters",
                                regex="^[A-Z0-9\\-]{3,20}$",
                            )
                        ],
                        verbose_name="Registration Mark",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        help_text="Manufacturer's serial number",
                        max_length=50,
                        verbose_name="Serial Number",
                    ),
                ),
                (
                    "year_manufactured",
                    models.PositiveIntegerField(
                        help_text="Year aircraft was manufactured",
                        verbose_name="Year Manufactured",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("registered", "Registered"),
                            ("pending", "Registration Pending"),
                            ("suspended", "Suspended"),
                            ("deregistered", "Deregistered"),
                        ],
                        default="pending",
                        help_text="Current CASA registration status",
                        max_length=20,
                        verbose_name="Registration Status",
                    ),
                ),
                (
                    "airworthiness_valid_until",
                    models.DateField(
                        blank=True,
                        help_text="Certificate of airworthiness expiry date",
                        null=True,
                        verbose_name="Airworthiness Valid Until",
                    ),
                ),
                (
                    "insurance_valid_until",
                    models.DateField(
                        blank=True,
                        help_text="Insurance coverage expiry date",
                        null=True,
                        verbose_name="Insurance Valid Until",
                    ),
                ),
                (
                    "last_maintenance_check",
                    models.DateField(
                        blank=True,
                        help_text="Date of last maintenance inspection",
                        null=True,
                        verbose_name="Last Maintenance Check",
                    ),
                ),
                (
                    "next_maintenance_due",
                    models.DateField(
                        blank=True,
                        help_text="Date next maintenance is due",
                        null=True,
                        verbose_name="Next Maintenance Due",
                    ),
                ),
                (
                    "current_flight_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Total accumulated flight hours",
                        max_digits=10,
                        verbose_name="Current Flight Hours",
                    ),
                ),
                (
                    "maximum_flight_hours",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum approved flight hours before overhaul",
                        null=True,
                        verbose_name="Maximum Flight Hours",
                    ),
                ),
                (
                    "flight_manual_reference",
                    models.CharField(
                        blank=True,
                        help_text="Flight manual document reference",
                        max_length=100,
                        verbose_name="Flight Manual Reference",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional aircraft notes and observations",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Date aircraft was registered",
                        verbose_name="Registration Date",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "operator",
                    models.ForeignKey(
                        blank=True,
                        help_text="Current operator (may differ from owner)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="operated_aircraft",
                        to="accounts.clientprofile",
                        verbose_name="Aircraft Operator",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="Registered owner from client profiles",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.clientprofile",
                        verbose_name="Aircraft Owner",
                    ),
                ),
                (
                    "aircraft_type",
                    models.ForeignKey(
                        help_text="CASA approved aircraft type",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="aircraft.aircrafttype",
                        verbose_name="Aircraft Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Aircraft",
                "verbose_name_plural": "Aircraft",
                "ordering": ["registration_mark"],
            },
        ),
    ]

# Generated by Django 5.2.7 on 2025-10-24 13:41

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_fix_risk_register_optional'),
    ]

    operations = [
        migrations.AddField(
            model_name='sopprocedurestep',
            name='acceptance_criteria',
            field=models.TextField(
                blank=True,
                help_text='Specific criteria that define successful completion of this step',
                verbose_name='Acceptance Criteria',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='emergency_procedures',
            field=models.TextField(
                blank=True,
                help_text='Emergency response procedures if something goes wrong during this step',
                verbose_name='Emergency Procedures',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='environmental_conditions',
            field=models.TextField(
                blank=True,
                help_text='Weather, lighting, or other environmental requirements',
                verbose_name='Environmental Conditions',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='jsa_control_measures',
            field=models.TextField(
                blank=True,
                help_text='Specific control measures to mitigate identified risks',
                verbose_name='JSA: Control Measures',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='jsa_hazard_identification',
            field=models.TextField(
                blank=True,
                help_text='Identify all potential hazards associated with this step (Required for Australian compliance)',
                verbose_name='JSA: Hazard Identification',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='jsa_risk_rating',
            field=models.CharField(
                blank=True,
                choices=[
                    ('low', 'Low Risk'),
                    ('medium', 'Medium Risk'),
                    ('high', 'High Risk'),
                    ('critical', 'Critical Risk'),
                ],
                help_text='Overall risk rating after controls applied',
                max_length=20,
                verbose_name='JSA: Risk Rating',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='quality_standards',
            field=models.TextField(
                blank=True,
                help_text='Quality criteria and standards that must be met',
                verbose_name='Quality Standards',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='regulatory_references',
            field=models.TextField(
                blank=True,
                help_text='Relevant CASA regulations, Australian standards, or other regulatory requirements',
                verbose_name='Regulatory References',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='required_equipment',
            field=models.TextField(
                blank=True,
                help_text='List all equipment, tools, and resources needed for this step',
                verbose_name='Required Equipment & Tools',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='required_personnel',
            field=models.TextField(
                blank=True,
                help_text='Personnel qualifications and numbers required',
                verbose_name='Required Personnel',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='risk_consequence',
            field=models.CharField(
                blank=True,
                choices=[
                    ('insignificant', 'Insignificant (1)'),
                    ('minor', 'Minor (2)'),
                    ('moderate', 'Moderate (3)'),
                    ('major', 'Major (4)'),
                    ('catastrophic', 'Catastrophic (5)'),
                ],
                max_length=15,
                verbose_name='Risk Consequence',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='risk_likelihood',
            field=models.CharField(
                blank=True,
                choices=[
                    ('rare', 'Rare (1)'),
                    ('unlikely', 'Unlikely (2)'),
                    ('possible', 'Possible (3)'),
                    ('likely', 'Likely (4)'),
                    ('almost_certain', 'Almost Certain (5)'),
                ],
                max_length=15,
                verbose_name='Risk Likelihood',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='safety_warnings',
            field=models.TextField(
                blank=True,
                help_text='Critical safety warnings and precautions for this step',
                verbose_name='Safety & Warnings',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='sign_off_required',
            field=models.BooleanField(
                default=False,
                help_text='Mark if this step requires supervisor or authority sign-off',
                verbose_name='Supervisor Sign-off Required',
            ),
        ),
        migrations.AddField(
            model_name='sopprocedurestep',
            name='verification_method',
            field=models.TextField(
                blank=True,
                help_text='How completion and quality of this step will be verified',
                verbose_name='Verification Method',
            ),
        ),
    ]

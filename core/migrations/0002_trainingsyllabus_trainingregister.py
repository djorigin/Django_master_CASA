# Generated by Django 5.2.7 on 2025-10-22 20:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0005_keypersonnel"),
        ("aircraft", "0001_initial"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TrainingSyllabus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "syllabus_id",
                    models.CharField(
                        help_text="Format: G1.1, G2.1, G3.1, etc.",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format must be G1.1, G2.1, etc.",
                                regex="^[A-Z]\\d+(\\.\\d+)*$",
                            )
                        ],
                        verbose_name="Syllabus ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Descriptive title of the training syllabus",
                        max_length=200,
                        verbose_name="Training Title",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("G1", "G1 - Policy and Procedure Training"),
                            ("G2", "G2 - RPAS Type Training"),
                            ("G3", "G3 - Night Visual Line of Sight Training"),
                            ("maintenance", "Maintenance Training"),
                            ("safety", "Safety Training"),
                            ("emergency", "Emergency Procedures Training"),
                            ("recurrent", "Recurrent Training"),
                            ("proficiency", "Proficiency Check"),
                            ("endorsement", "Endorsement Training"),
                        ],
                        max_length=20,
                        verbose_name="Training Category",
                    ),
                ),
                (
                    "training_type",
                    models.CharField(
                        choices=[
                            ("ground_theory", "Ground/Theory"),
                            ("flight_exercises", "Flight Exercises"),
                            ("practical_assessment", "Practical Assessment"),
                            ("theory_test", "Theory Test"),
                            ("competency_check", "Competency Check"),
                            ("endorsement_check", "Endorsement Check"),
                        ],
                        max_length=20,
                        verbose_name="Training Type",
                    ),
                ),
                (
                    "applicability",
                    models.CharField(
                        choices=[
                            ("all_rps", "All RPs and Operational Crew Members"),
                            ("rps_operating_rpa", "RPs Operating RPA Type (All Items)"),
                            (
                                "operational_crew",
                                "Operational Crew Members (Role Relevant)",
                            ),
                            ("rps_night_ops", "RPs Operating at Night"),
                            ("maintenance_staff", "Maintenance Personnel"),
                            ("safety_officers", "Safety Officers"),
                        ],
                        help_text="Who this training applies to",
                        max_length=30,
                        verbose_name="Applicability",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of training content and objectives",
                        verbose_name="Training Description",
                    ),
                ),
                (
                    "learning_objectives",
                    models.TextField(
                        help_text="Specific learning objectives and outcomes",
                        verbose_name="Learning Objectives",
                    ),
                ),
                (
                    "prerequisites",
                    models.TextField(
                        blank=True,
                        help_text="Required prior training or qualifications",
                        verbose_name="Prerequisites",
                    ),
                ),
                (
                    "duration_hours",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total training duration in hours",
                        max_digits=5,
                        verbose_name="Duration (Hours)",
                    ),
                ),
                (
                    "theory_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Theory/ground school hours",
                        max_digits=5,
                        verbose_name="Theory Hours",
                    ),
                ),
                (
                    "practical_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Practical/flight training hours",
                        max_digits=5,
                        verbose_name="Practical Hours",
                    ),
                ),
                (
                    "assessment_method",
                    models.CharField(
                        help_text="How competency is assessed (written test, practical, etc.)",
                        max_length=100,
                        verbose_name="Assessment Method",
                    ),
                ),
                (
                    "pass_mark",
                    models.PositiveIntegerField(
                        default=80,
                        help_text="Minimum percentage required to pass",
                        verbose_name="Pass Mark (%)",
                    ),
                ),
                (
                    "competency_standards",
                    models.TextField(
                        help_text="Performance criteria and standards for competency",
                        verbose_name="Competency Standards",
                    ),
                ),
                (
                    "casa_reference",
                    models.CharField(
                        blank=True,
                        help_text="CASA regulation or manual reference",
                        max_length=100,
                        verbose_name="CASA Reference",
                    ),
                ),
                (
                    "regulatory_requirement",
                    models.BooleanField(
                        default=True,
                        help_text="Is this training mandatory under CASA regulations?",
                        verbose_name="Regulatory Requirement",
                    ),
                ),
                (
                    "validity_period_months",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="How long this training remains valid",
                        null=True,
                        verbose_name="Validity Period (Months)",
                    ),
                ),
                (
                    "recurrent_training_required",
                    models.BooleanField(
                        default=False,
                        help_text="Does this training require periodic renewal?",
                        verbose_name="Recurrent Training Required",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("approved", "Approved"),
                            ("current", "Current"),
                            ("superseded", "Superseded"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        default="draft",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "approved_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Approval Date"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "aircraft_types",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Aircraft types this training applies to",
                        to="aircraft.aircrafttype",
                        verbose_name="Applicable Aircraft Types",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Authority who approved this training syllabus",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_syllabi",
                        to="accounts.staffprofile",
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_syllabi",
                        to="accounts.staffprofile",
                        verbose_name="Created By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Syllabus",
                "verbose_name_plural": "Training Syllabi",
                "ordering": ["category", "syllabus_id"],
            },
        ),
        migrations.CreateModel(
            name="TrainingRegister",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "training_record_id",
                    models.CharField(
                        help_text="Format: TR-YYYY-XXXXXX",
                        max_length=25,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format must be TR-YYYY-XXXXXX",
                                regex="^TR-\\d{4}-\\d{6}$",
                            )
                        ],
                        verbose_name="Training Record ID",
                    ),
                ),
                (
                    "required_by_date",
                    models.DateField(
                        help_text="Date by which training must be completed",
                        verbose_name="Required By Date",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When training is scheduled to occur",
                        null=True,
                        verbose_name="Scheduled Date/Time",
                    ),
                ),
                (
                    "started_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When training commenced",
                        null=True,
                        verbose_name="Training Started",
                    ),
                ),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When training was successfully completed",
                        null=True,
                        verbose_name="Training Completed",
                    ),
                ),
                (
                    "assessment_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Assessment score as percentage",
                        max_digits=5,
                        null=True,
                        verbose_name="Assessment Score (%)",
                    ),
                ),
                (
                    "passed",
                    models.BooleanField(
                        default=False,
                        help_text="Did trainee pass the assessment?",
                        verbose_name="Passed Assessment",
                    ),
                ),
                (
                    "training_provider",
                    models.CharField(
                        blank=True,
                        help_text="External training provider (if applicable)",
                        max_length=200,
                        verbose_name="Training Provider",
                    ),
                ),
                (
                    "training_location",
                    models.CharField(
                        blank=True,
                        help_text="Where training was conducted",
                        max_length=200,
                        verbose_name="Training Location",
                    ),
                ),
                (
                    "certificate_number",
                    models.CharField(
                        blank=True,
                        help_text="Training certificate or endorsement number",
                        max_length=50,
                        verbose_name="Certificate Number",
                    ),
                ),
                (
                    "training_notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about training delivery or performance",
                        verbose_name="Training Notes",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("required", "Required"),
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed - Requires Retrain"),
                            ("expired", "Expired"),
                            ("waived", "Waived"),
                        ],
                        default="required",
                        max_length=15,
                        verbose_name="Training Status",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("critical", "Critical - Immediate"),
                            ("high", "High Priority"),
                            ("medium", "Medium Priority"),
                            ("low", "Low Priority"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="Priority Level",
                    ),
                ),
                (
                    "valid_from",
                    models.DateField(
                        blank=True,
                        help_text="Date from which training certification is valid",
                        null=True,
                        verbose_name="Valid From",
                    ),
                ),
                (
                    "valid_until",
                    models.DateField(
                        blank=True,
                        help_text="Date when training certification expires",
                        null=True,
                        verbose_name="Valid Until",
                    ),
                ),
                (
                    "next_recurrent_due",
                    models.DateField(
                        blank=True,
                        help_text="When recurrent training is next due",
                        null=True,
                        verbose_name="Next Recurrent Due",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_training_records",
                        to="accounts.staffprofile",
                        verbose_name="Created By",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        blank=True,
                        help_text="Instructor who delivered the training",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="instructed_training",
                        to="accounts.staffprofile",
                        verbose_name="Instructor",
                    ),
                ),
                (
                    "trainee_pilot",
                    models.ForeignKey(
                        blank=True,
                        help_text="Pilot receiving training",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_records",
                        to="accounts.pilotprofile",
                        verbose_name="Trainee (Pilot)",
                    ),
                ),
                (
                    "trainee_staff",
                    models.ForeignKey(
                        blank=True,
                        help_text="Staff member receiving training",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_records",
                        to="accounts.staffprofile",
                        verbose_name="Trainee (Staff)",
                    ),
                ),
                (
                    "training_syllabus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="training_records",
                        to="core.trainingsyllabus",
                        verbose_name="Training Syllabus",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Register",
                "verbose_name_plural": "Training Register",
                "ordering": ["-required_by_date", "-created_at"],
            },
        ),
    ]

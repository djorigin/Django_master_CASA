# Generated by Django 5.2.7 on 2025-10-22 20:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0005_keypersonnel"),
        ("aircraft", "0001_initial"),
        ("flight_operations", "0002_remove_mission_risk_assessment_completed_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="StandardOperatingProcedure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sop_id",
                    models.CharField(
                        help_text="Format: XXX-XXX-SOP (e.g., FLT-001-SOP)",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format must be XXX-XXX-SOP (e.g., FLT-001-SOP)",
                                regex="^[A-Z]{3}-\\d{3}-SOP$",
                            )
                        ],
                        verbose_name="SOP ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Clear, descriptive title of the procedure",
                        max_length=200,
                        verbose_name="SOP Title",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("flight_ops", "Flight Operations"),
                            ("maintenance", "Maintenance Operations"),
                            ("safety", "Safety Procedures"),
                            ("emergency", "Emergency Procedures"),
                            ("training", "Training Procedures"),
                            ("security", "Security Procedures"),
                            ("ground_ops", "Ground Operations"),
                            ("weather", "Weather Procedures"),
                            ("navigation", "Navigation Procedures"),
                            ("communication", "Communication Procedures"),
                        ],
                        help_text="CASA operational category",
                        max_length=20,
                        verbose_name="SOP Category",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0",
                        help_text="Version number (e.g., 1.0, 2.1)",
                        max_length=10,
                        verbose_name="Version",
                    ),
                ),
                (
                    "purpose",
                    models.TextField(
                        help_text="Clearly state the objective of the procedure",
                        verbose_name="Purpose",
                    ),
                ),
                (
                    "scope",
                    models.TextField(
                        help_text="Define the specific activities or aircraft the procedure applies to",
                        verbose_name="Scope",
                    ),
                ),
                (
                    "responsibilities",
                    models.TextField(
                        help_text="Outline who is responsible for carrying out each step",
                        verbose_name="Responsibilities",
                    ),
                ),
                (
                    "definitions",
                    models.TextField(
                        blank=True,
                        help_text="Define any technical terms or jargon used in the procedure",
                        verbose_name="Definitions",
                    ),
                ),
                (
                    "references",
                    models.TextField(
                        blank=True,
                        help_text="List any relevant regulations, manuals, or other documents",
                        verbose_name="References",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("critical", "Critical - Safety Critical"),
                            ("high", "High Priority"),
                            ("medium", "Medium Priority"),
                            ("low", "Low Priority"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="Priority Level",
                    ),
                ),
                (
                    "frequency_of_use",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("as_required", "As Required"),
                            ("emergency_only", "Emergency Only"),
                        ],
                        default="as_required",
                        max_length=20,
                        verbose_name="Frequency of Use",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("review", "Under Review"),
                            ("approved", "Approved"),
                            ("revision", "Requires Revision"),
                            ("superseded", "Superseded"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        default="draft",
                        max_length=15,
                        verbose_name="Approval Status",
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "reviewed_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when SOP was last reviewed",
                        null=True,
                        verbose_name="Review Date",
                    ),
                ),
                (
                    "approved_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when SOP was approved",
                        null=True,
                        verbose_name="Approval Date",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when SOP becomes effective",
                        null=True,
                        verbose_name="Effective Date",
                    ),
                ),
                (
                    "next_review_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when SOP should be next reviewed",
                        null=True,
                        verbose_name="Next Review Date",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "aircraft_types",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Aircraft types this SOP applies to",
                        to="aircraft.aircrafttype",
                        verbose_name="Applicable Aircraft Types",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Authority who approved this SOP",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_sops",
                        to="accounts.staffprofile",
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Staff member who created this SOP",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_sops",
                        to="accounts.staffprofile",
                        verbose_name="Created By",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Staff member who reviewed this SOP",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reviewed_sops",
                        to="accounts.staffprofile",
                        verbose_name="Reviewed By",
                    ),
                ),
                (
                    "superseded_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="SOP that replaces this one",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.standardoperatingprocedure",
                        verbose_name="Superseded By",
                    ),
                ),
                (
                    "supersedes",
                    models.ForeignKey(
                        blank=True,
                        help_text="SOP that this one replaces",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="superseded_sops",
                        to="core.standardoperatingprocedure",
                        verbose_name="Supersedes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Standard Operating Procedure",
                "verbose_name_plural": "Standard Operating Procedures",
                "ordering": ["category", "sop_id"],
            },
        ),
        migrations.CreateModel(
            name="SOPProcedureStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "step_number",
                    models.PositiveIntegerField(
                        help_text="Sequential step number within the procedure",
                        verbose_name="Step Number",
                    ),
                ),
                (
                    "step_type",
                    models.CharField(
                        choices=[
                            ("normal", "Normal Operation"),
                            ("emergency", "Emergency Procedure"),
                            ("contingency", "Contingency Procedure"),
                            ("safety_check", "Safety Check"),
                            ("verification", "Verification Step"),
                        ],
                        default="normal",
                        max_length=15,
                        verbose_name="Step Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Brief title describing this step",
                        max_length=200,
                        verbose_name="Step Title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the step to be performed",
                        verbose_name="Step Description",
                    ),
                ),
                (
                    "responsible_role",
                    models.CharField(
                        help_text="Role or position responsible for this step (e.g., Pilot, Maintenance Tech)",
                        max_length=100,
                        verbose_name="Responsible Role",
                    ),
                ),
                (
                    "duration_estimate",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Estimated time to complete this step",
                        null=True,
                        verbose_name="Duration (minutes)",
                    ),
                ),
                (
                    "safety_critical",
                    models.BooleanField(
                        default=False,
                        help_text="Mark if this step is safety critical",
                        verbose_name="Safety Critical",
                    ),
                ),
                (
                    "verification_required",
                    models.BooleanField(
                        default=False,
                        help_text="Mark if this step requires verification/sign-off",
                        verbose_name="Verification Required",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes, warnings, or references for this step",
                        verbose_name="Additional Notes",
                    ),
                ),
                (
                    "prerequisite_steps",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Steps that must be completed before this step",
                        to="core.sopprocedurestep",
                        verbose_name="Prerequisite Steps",
                    ),
                ),
                (
                    "sop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="procedure_steps",
                        to="core.standardoperatingprocedure",
                        verbose_name="SOP",
                    ),
                ),
            ],
            options={
                "verbose_name": "SOP Procedure Step",
                "verbose_name_plural": "SOP Procedure Steps",
                "ordering": ["sop", "step_number"],
                "unique_together": {("sop", "step_number")},
            },
        ),
        migrations.CreateModel(
            name="SOPRiskAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "risk_context",
                    models.TextField(
                        help_text="How this risk applies specifically to this SOP",
                        verbose_name="Risk Context in SOP",
                    ),
                ),
                (
                    "monitoring_requirements",
                    models.TextField(
                        blank=True,
                        help_text="How this risk should be monitored during SOP execution",
                        verbose_name="Monitoring Requirements",
                    ),
                ),
                ("assessed_date", models.DateTimeField(auto_now_add=True)),
                ("last_reviewed", models.DateTimeField(auto_now=True)),
                (
                    "next_review_date",
                    models.DateField(
                        help_text="When this risk assessment should be next reviewed",
                        verbose_name="Next Review Date",
                    ),
                ),
                (
                    "mitigation_steps",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific SOP steps that mitigate this risk",
                        to="core.sopprocedurestep",
                        verbose_name="Mitigation Steps",
                    ),
                ),
                (
                    "risk_owner",
                    models.ForeignKey(
                        help_text="Person responsible for managing this risk in SOP context",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.staffprofile",
                        verbose_name="Risk Owner for SOP",
                    ),
                ),
                (
                    "risk_register",
                    models.ForeignKey(
                        help_text="Associated risk register entry from flight operations",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flight_operations.riskregister",
                        verbose_name="Risk Register Entry",
                    ),
                ),
                (
                    "sop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessments",
                        to="core.standardoperatingprocedure",
                        verbose_name="SOP",
                    ),
                ),
            ],
            options={
                "verbose_name": "SOP Risk Assessment",
                "verbose_name_plural": "SOP Risk Assessments",
                "unique_together": {("sop", "risk_register")},
            },
        ),
    ]
